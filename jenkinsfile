pipeline {
    agent any
    
    environment {
        PYTHON_VERSION = '3.8'  // Change as needed
        VIRTUALENV = "venv"
        SVM_SERVICE_URL = "http://svm_service:8000"  // Update with your SVM service URL
        VGG19_SERVICE_URL = "http://vgg19_service:9000"  // Update with your VGG19 service URL
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    checkout scm
                }
            }
        }

        stage('Set up Python') {
            steps {
                script {
                    // Set up Python and create a virtual environment
                    sh "pyenv install -s ${PYTHON_VERSION}"
                    sh "pyenv global ${PYTHON_VERSION}"
                    sh "python -m venv ${VIRTUALENV}"
                    sh "source ${VIRTUALENV}/bin/activate"
                    sh "pip install --upgrade pip"
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    sh "pip install -r requirements.txt"
                }
            }
        }

        stage('Run SVM Tests') {
            steps {
                script {
                    sh "python svm_service/tests/test_app.py"
                }
            }
        }

        stage('Run VGG19 Tests') {
            steps {
                script {
                    sh "python vgg19_service/tests/test_app.py"
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // Deploy your application or services
                    // You might want to use tools like Docker, Kubernetes, etc.
                }
            }
        }
    }

    post {
        always {
            // Clean up and deactivate virtual environment
            sh "deactivate"
        }
    }
}
